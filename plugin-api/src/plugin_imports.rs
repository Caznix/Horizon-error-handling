// This file is automatically generated by build.rs
// Do not edit this file manually!

use horizon_plugin_api::{Plugin, LoadedPlugin};
use std::collections::HashMap;
use horizon_data_types::Player;
use std::sync::RwLock;
use std::sync::Arc;
use socketioxide::extract::SocketRef;

use pebblevault_plugin;
use pebblevault_plugin::Plugin_Construct as pebblevault_plugin_construct;
use test_plugin;
use test_plugin::Plugin_Construct as test_plugin_construct;

pub fn load_plugins(socket: SocketRef, players: Arc<RwLock<Vec<horizon_data_types::Player>>>) -> HashMap<&'static str, LoadedPlugin> {
    let mut plugins = HashMap::new();

    plugins.insert(
        "pebblevault_plugin",
        LoadedPlugin {
            instance: <pebblevault_plugin::Plugin as pebblevault_plugin::Plugin_Construct>::new(plugins.clone(), socket.clone(), players.clone()),
        }
    );
    plugins.insert(
        "test_plugin",
        LoadedPlugin {
            instance: <test_plugin::Plugin as test_plugin::Plugin_Construct>::new(plugins.clone(), socket.clone(), players.clone()),
        }
    );

    plugins
}
